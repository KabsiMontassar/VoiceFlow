# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN npm install -g pnpm && apk add --no-cache python3 make g++

# Copy root config files
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY prettier.config.js ./
COPY tailwind.config.js ./
COPY eslint.config.js ./

# Copy shared
COPY shared/package.json shared/pnpm-lock.yaml ./shared/
COPY shared/src ./shared/src
COPY shared/tsconfig.json ./shared/

# Copy frontend
COPY frontend/package.json frontend/pnpm-lock.yaml ./frontend/
COPY frontend/src ./frontend/src
COPY frontend/tsconfig*.json ./frontend/
COPY frontend/index.html ./frontend/
COPY frontend/public ./frontend/public

# Install dependencies
RUN cd /app/frontend && pnpm install --frozen-lockfile

# Build frontend
RUN cd /app/frontend && pnpm build

# Serve stage - use minimal nginx image
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built files from builder
COPY --from=builder /app/frontend/dist /usr/share/nginx/html

# Nginx configuration for SPA routing
RUN echo 'server { \
    listen 5173; \
    location / { \
        root /usr/share/nginx/html; \
        try_files $uri $uri/ /index.html; \
    } \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ { \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:5173 || exit 1

EXPOSE 5173

CMD ["nginx", "-g", "daemon off;"]
